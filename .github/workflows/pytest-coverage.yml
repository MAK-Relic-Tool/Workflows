name: PyTest with Coverage

on:
  workflow_call:

    inputs:
      setup-path:
        type: string
        default:  "."
      test-path:
        type: string
        default: ""
      requirements-file:
        type: string
        default: "test-requirements.txt"
      repository:
        type: string
        default: ${{ github.repository }}
      python-versions:
        type: string
        default: '["3.9", "3.10", "3.11", "3.12", "3.13"]'
      runners:
        type: string
        default: '["ubuntu-latest", "windows-latest", "macos-latest"]'
      fail-fast:
        type: boolean
        default: true

jobs:
  pytest-coverage:
    runs-on: ${{ matrix.runner }}

    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        python-version: ${{ fromJSON(inputs.python-versions) }}
        runner: ${{ fromJSON(inputs.runners) }}

    name: PyTest w/ Coverage (Python ${{ matrix.python-version }} [${{ matrix.runner }}])

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
            repository: ${{ inputs.repository }}

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade Pip
        run: |
          python -m pip install --upgrade pip

      - name: Install Tools (Wheel, Setuptools, Pytest, Coverage)
        run: |
          pip install wheel setuptools pytest coverage

      - name: Install Testing Requirements
        if: ${{ hashFiles(inputs.requirements-file) != '' }}
        run: |
          pip install -r ${{ inputs.requirements-file }}

      - name: Build & Install Repo
        run: |
          pip install ${{ inputs.setup-path }}

      - name: Run PyTest
        run: |
          coverage run -m pytest -v ${{ inputs.test-path }} --color=yes

      - name: Check Coverage
        run: |
          coverage report